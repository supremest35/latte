<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.example.latte.dao.AcornDao">

	<select id="getAcornByNo" resultType="com.example.latte.vo.AcornItem">
		select
	       	acorn_item_no				as no,
			category_no					as categoryNo,
			category_mid_no				as categoryMidNo,
			acorn_item_name				as name,
			acorn_item_price			as price,
			acorn_item_stock			as stock,
			acorn_item_status			as status,
			acorn_item_like_cnt			as likeCnt,
			acorn_item_comment_cnt		as commentCnt,
			acorn_item_sell_cnt			as sellCnt,
			acorn_item_created_date		as createdDate
		from
	       	latte_acorn_items
		where
			acorn_item_no = #{value}
	</select>
	
	<select id="getTotalCountByCondition" parameterType="map" resultType="int">
		select
			count(*)
		from
			latte_acorn_items
		<where>
			<if test="categoryNo != null">
				category_no = #{categoryNo}
			</if>
		</where>
	</select>
	
	<select id="getAcornsBycondition" parameterType="map" resultType="com.example.latte.vo.AcornItem">
		 select *
		 from
		 	(
		    select
		       	row_number() over (order by acorn_item_no desc) as rn,
		       	acorn_item_no				as no,
				category_no					as categoryNo,
				category_mid_no				as categoryMidNo,
				acorn_item_name				as name,
				acorn_item_price			as price,
				acorn_item_stock			as stock,
				acorn_item_status			as status,
				acorn_item_like_cnt			as likeCnt,
				acorn_item_comment_cnt		as commentCnt,
				acorn_item_sell_cnt			as sellCnt,
				acorn_item_created_date		as createdDate
			from
		       	latte_acorn_items
		    <where>
		    	<if test="categoryNo != null">
		       		category_mid_no = #{categoryNo}
		       	</if>
		    </where>
			)
		<where>
			<if test="begin != 0 and end != 0">
				rn >= #{begin}	and rn &lt;= #{end}
			</if>
		</where>
	</select>
	<select id="getAllAcorns" resultType="com.example.latte.vo.AcornItem">
		select
	       	acorn_item_no				as no,
			category_no					as categoryNo,
			category_mid_no				as categoryMidNo,
			acorn_item_name				as name,
			acorn_item_price			as price,
			acorn_item_stock			as stock,
			acorn_item_status			as status,
			acorn_item_like_cnt			as likeCnt,
			acorn_item_comment_cnt		as commentCnt,
			acorn_item_sell_cnt			as sellCnt,
			acorn_item_created_date		as createdDate
		from
	       	latte_acorn_items
	</select>
	<select id="getUserItems" parameterType="int" resultType="com.example.latte.vo.UserItem">
		select *
		from
		 	(select
		       	row_number() over (order by user_item_created_date desc) as rn,
				user_item_no			as no,
				user_no					as userNo,
				acorn_item_no			as acornNo,
				acorn_item_name			as acornName,
				user_item_created_date	as createdDate
			from
				latte_user_items
			where
				user_no = #{userNo})
	</select>

	<insert id="insertAcorn" parameterType="com.example.latte.vo.AcornItem">
		insert into latte_acorn_items
			(acorn_item_no, category_mid_no, acorn_item_name, acorn_item_price, acorn_item_stock)
		values
			(latte_acorn_item_no_seq.nextval, #{categoryMidNo}, #{name}, #{price}, #{stock})
	</insert>
	<insert id="insertUserItem" parameterType="com.example.latte.vo.UserItem">
		insert into latte_user_items
			(user_item_no, user_no, acorn_item_no, acorn_item_name)
		values
			(latte_user_item_no_seq.nextval, #{userNo}, #{acornNo}, #{acornName})
	</insert>
	<update id="updateAcorn" parameterType="com.example.latte.vo.AcornItem">
		update latte_acorn_items
		set
			acorn_item_stock = #{stock}
	</update>

</mapper>