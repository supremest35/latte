<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.example.latte.dao.MiniHomeBoardDao">
	<insert id="insertMiniHomeBoard" parameterType="com.example.latte.vo.MiniHomeBoard">
		insert into
			minihome_boards(board_no, board_folder_no, minihome_no, board_title, board_content, board_image_filename, board_extra_filename)
		values
			(minihome_board_no_seq.nextval, #{folderNo}, #{miniHomeNo}, #{title}, #{content}, #{imgFilename}, #{extraFilename})
	</insert>
	<update id="updateMiniHomeBoard" parameterType="com.example.latte.vo.MiniHomeBoard">
		update
			minihome_boards
		set
			board_folder_no = #{folderNo},
			board_title = #{title},
			board_content = #{content},
			board_hit_cnt = #{hitCnt},
			board_like_cnt = #{likeCnt},
			board_comment_cnt = #{commentCnt},
			board_deleted = #{deleted}
		where
			board_no = #{no}
	</update>
	<select id="getTotalBoardsByOption" parameterType="map" resultType="int">
		select 
			count(*)
		from
			(select 
				row_number() over(order by a.board_no desc) rn, a.*			
			 from
				minihome_boards a, (select 
										folder_no
									from
										minihome_board_folders
									start with
										folder_no = #{folderNo}
									connect by 
										prior folder_no = folder_parent_no) b
			 where 
				a.board_folder_no = b.folder_no
				and a.board_deleted = 'N')
	</select>
	<select id="getBoardsByOption" parameterType="map" resultType="com.example.latte.vo.MiniHomeBoard">
		select 
			board_no					as no,
			board_folder_no				as folderNo,
			minihome_no					as miniHomeNo,
			board_title					as title,
			board_content				as content,
			board_image_filename		as imgFilename,
			board_extra_filename		as extraFilename,
			board_hit_cnt				as hitCnt,
			board_like_cnt				as likeCnt,
			board_comment_cnt			as commentCnt,
			board_deleted				as deleted,
			board_created_date			as createdDate
		from
			<if test="miniHomeNo == null">
				(select 
					row_number() over(order by a.board_no desc) rn, a.*			
				 from
					minihome_boards a, (select 
											folder_no
										from
											minihome_board_folders
										start with
											folder_no = #{folderNo}
										connect by 
											prior folder_no = folder_parent_no) b
				 where 
					a.board_folder_no = b.folder_no
					and a.board_deleted = 'N')
			</if>
			<if test="miniHomeNo != null">
				(select 
					row_number() over(order by a.board_no desc) rn, a.*			
				 from
					minihome_boards a
				 where
				 	a.board_deleted = 'N')
			</if>
		where
			<if test="begin == null">
				rn >= 1 and rn &lt;= 16			
			</if>
			<if test="begin != null">
				rn >= #{begin} and rn &lt;= #{end}			
			</if>
			<if test="miniHomeNo != null">
				and minihome_no = #{miniHomeNo}
			</if>
	</select>
	<select id="getBoardByNo" parameterType="int" resultType="com.example.latte.vo.MiniHomeBoard">
		select 
			board_no					as no,
			board_folder_no				as folderNo,
			minihome_no					as miniHomeNo,
			board_title					as title,
			board_content				as content,
			board_image_filename		as imgFilename,
			board_extra_filename		as extraFilename,
			board_hit_cnt				as hitCnt,
			board_like_cnt				as likeCnt,
			board_comment_cnt			as commentCnt,
			board_deleted				as deleted,
			board_created_date			as createdDate
		from
			minihome_boards
		where
			board_no = #{value}
			and board_deleted = 'N'
			
	</select>
</mapper>